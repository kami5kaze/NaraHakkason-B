from linebot.models import TextSendMessage
from linebot.exceptions import LineBotApiError
import datetime

class sendNotify:
    
    def __init__(self,key,api):

        self.timeList = {'鳥見町':[['富雄団地集会所駐車場（UR管理事務所前）',['1090010','0140050','2134530','4100055']]],
            '高畑町':[['あすならホーム高畑',['2114530']],['福井町（不空院の駐車場）',['2104525']]],
            '須川町':[['JA東里支店あと',['3134015']],['須川上',['3131025']]],
            '青山':[['青山八丁目公園南側',['0113025']],['青山旧Aコープ駐車場',['0100055']],['青山二丁目公園南側',['0110025']]],
            '青垣台':[['青垣台二丁目街区公園',['0152030']]],
            '阪原町':[['阪原中央公民館前',['1123020']],['上脇公民館前（南阪原集荷場前）',['1120520']]],
            '邑地町':[['柳生公民館邑地分館駐車場',['2142530']],['平尾石油',['2134510']],
                    ['北商店さま前',['2140020']],['下茶工場',['2154015']],['中南組さま前',['2131015']],['邑地町',['2133010']]]
            }
        self.townKey = key
        self.line_bot_api = api

    def transDateTime(self,t,s):
        return datetime.datetime(year=t.year, month=t.month, day=t.day, hour=int(s[0:2]), minute=int(s[2:5]))

    def isSendAdvanceNotification(self,t,nowTime, comeTime):
        nowT = self.transDateTime(t,nowTime)
        comeT = self.transDateTime(t,comeTime)

        if comeT > nowT and datetime.timedelta(seconds=29*60) <= comeT - nowT <= datetime.timedelta(seconds=30*60):
            return True
        return False

    def isSendLeftNotification(self,t,nowTime, comeTime, stayTime):
        nowT = self.transDateTime(t,nowTime)
        leftT = self.transDateTime(t,comeTime) + datetime.timedelta(seconds=int(stayTime)*60)

        if leftT > nowT and datetime.timedelta(seconds=9*60) <= leftT - nowT <= datetime.timedelta(seconds=10*60):
            return True
        return False

    # 通知を送信するかを判断する関数
    def can_send_notification(self):
        print('いちおうきてるのぜ〜〜')
        t = datetime.datetime.now()
        strTime = t.strftime('%H%M')
        w = t.weekday()
        townName = self.townKey
        if townName == '': return
        townlen = len(self.timeList[townName])
        for i in range(townlen):
            for j in range(len(self.timeList[townName][i][1])):
                come = self.timeList[townName][i][1][j]
                print('---sender---',come[0],w)
                if come[0] == w and self.isSendAdvanceNotification(t,strTime,come[1:5]):
                    self.send_notification(self.timeList[townName][i][0]+'に到着30分前です')
                    # print(d[townName][i][0],'到着30分前')
                if come[0] == w and self.isSendLeftNotification(t,strTime,come[1:5],come[5:]):
                    self.send_notification(self.timeList[townName][i][0]+'を出発10分前です')
                    # print(d[townName][i][0],'終了10分前')

    # 通知を送信する関数
    def send_notification(self,message):
        try:
            # メッセージを送信
            self.line_bot_api.broadcast(TextSendMessage(text=message))
            print("Notification sent successfully!")
        except LineBotApiError as e:
            print("Failed to send notification:", e)